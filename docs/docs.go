// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/coupon/cache": {
            "get": {
                "description": "Retrieve all cached coupon data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cache"
                ],
                "summary": "Get all cache",
                "responses": {
                    "200": {
                        "description": "cache data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/coupons": {
            "post": {
                "description": "Create a new coupon with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupons"
                ],
                "summary": "Create a new coupon",
                "parameters": [
                    {
                        "description": "Coupon details",
                        "name": "coupon",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Coupon"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message: Coupon created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error: Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "error: Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/coupons/applicable": {
            "post": {
                "description": "Retrieve a list of applicable coupons for the given order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupons"
                ],
                "summary": "Get Applicable Coupons",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "applicable_coupons: List of applicable coupons",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error: Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/coupons/validate": {
            "post": {
                "description": "Validate a coupon code for the given order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Coupons"
                ],
                "summary": "Validate Coupon",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "is_valid: true, discount: {items_discount: float64}, message: Coupon applied successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "is_valid: false, reason: string",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Coupon": {
            "type": "object",
            "properties": {
                "applicable_categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "applicable_medicine_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "coupon_code": {
                    "type": "string"
                },
                "discount_type": {
                    "description": "\"percentage\" or \"flat\"",
                    "type": "string"
                },
                "discount_value": {
                    "type": "number"
                },
                "expiry_date": {
                    "description": "\"YYYY-MM-DD HH:MM:SS\"",
                    "type": "string"
                },
                "max_usage_per_user": {
                    "type": "integer"
                },
                "min_order_value": {
                    "type": "number"
                },
                "terms_and_conditions": {
                    "type": "string"
                },
                "usage_type": {
                    "description": "\"one_time\" , \"multi_use\" , or \"time_based\"",
                    "type": "string"
                },
                "valid_time_window": {
                    "type": "string"
                }
            }
        },
        "models.Order": {
            "type": "object",
            "properties": {
                "cart_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Product"
                    }
                },
                "coupon_code": {
                    "type": "string"
                },
                "order_total": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
